<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YORZtuz/AFCRMov05x2kAAAAAElFTkSuQmCC
</value>
  </data>
</root>